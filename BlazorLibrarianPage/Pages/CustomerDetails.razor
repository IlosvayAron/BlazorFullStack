@page "/Customer/{id:int}"
@using BlazorFullStack.Contract
@inject ICustomerService CustomerService
@inject IRentalService RentalService

<PageTitle>CustomerDetails</PageTitle>

@if (Customer is null)
{
        <p>Loading..</p>
}
else
{
    <h3>@Customer.Name's details</h3>
    <table class="table table-hover table-border">
        <thead>
            <tr>
                <th>Name</th>
                <th>Address</th>
                <th>Reading number</th>
                <th>Date of birth</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Customer.Name</td>
                <td>@Customer.Address</td>
                <td>@Customer.ReadingNumber</td>
                <td>@Customer.DateOfBirth.ToShortDateString()</td>
            </tr>
        </tbody>
    </table>
    <h3>Rental details</h3>
    @if (Rentals is null) {

    }
    else
    {
        <table class="table table-hover table-border">
            <thead>
                <tr>
                    <th>Reading number</th>
                    <th>Inventory number</th>
                    <th>Time of rental</th>
                    <th>Returnal deadline</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var rental in Rentals)
                {
                    <tr>
                        <td>@Customer.ReadingNumber</td>
                        <td>@rental.InventoryNumber</td>
                        <td>@rental.RentalTime.ToShortDateString()</td>
                        @if (rental.ReturnDeadline < DateTime.Today)
                        {
                            <td style="color: red">@rental.ReturnDeadline.ToShortDateString() <span class="badge bg-secondary">You have exceeded the deadline!</span></td>
                        }
                        else
                        {
                            <td>@rental.ReturnDeadline.ToShortDateString()</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
}

<style>
    th, td {
    width: 25%;
    text-align: left;
    padding: 8px;
}
</style>

@code {
    [Parameter]
    public int Id { get; set; }

    private Member? Customer { get; set; }
    private IEnumerable<Rental>? Rentals { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Customer = await CustomerService.GetMemberByIdAsync(Id);
        Rentals = await RentalService.GetRentalsByReadingNumberAsync(Customer.ReadingNumber);
    }
}
